"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª–µ–π
–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python test_example.py
"""

import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
import sys
sys.path.insert(0, str(Path(__file__).parent))

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    try:
        from manim_video_generator.gemini_client import GeminiClient
        print("‚úÖ GeminiClient –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ GeminiClient: {e}")
        return False
    
    try:
        from manim_video_generator.video_executor import VideoExecutor
        print("‚úÖ VideoExecutor –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ VideoExecutor: {e}")
        return False
    
    try:
        from manim_video_generator.cli import generate
        print("‚úÖ CLI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ CLI: {e}")
        return False
    
    return True

def test_video_executor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º VideoExecutor –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ VideoExecutor...")
    
    try:
        from manim_video_generator.video_executor import VideoExecutor
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
        executor = VideoExecutor(output_dir="test_output")
        print("‚úÖ VideoExecutor —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å
        if Path("test_output").exists():
            print("‚úÖ –ü–∞–ø–∫–∞ –≤—ã–≤–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("‚ùå –ü–∞–ø–∫–∞ –≤—ã–≤–æ–¥–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ VideoExecutor: {e}")
        return False
    
    return True

def test_gemini_client_init():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é GeminiClient (–±–µ–∑ API –∫–ª—é—á–∞)"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GeminiClient (–±–µ–∑ API)...")
    
    try:
        from manim_video_generator.gemini_client import GeminiClient
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –±–µ–∑ API –∫–ª—é—á–∞
        try:
            client = GeminiClient()
            print("‚ùå GeminiClient –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –±–µ–∑ API –∫–ª—é—á–∞")
            return False
        except ValueError as e:
            if "GEMINI_API_KEY" in str(e):
                print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞")
            else:
                print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ GeminiClient: {e}")
        return False
    
    return True

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Manim Video Generator\n")
    
    all_passed = True
    
    all_passed &= test_imports()
    all_passed &= test_video_executor()
    all_passed &= test_gemini_client_init()
    
    print("\n" + "="*50)
    if all_passed:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ API –∫–ª—é—á Gemini –≤ .env —Ñ–∞–π–ª")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: manim-generate '–ø—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è'")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        sys.exit(1)

if __name__ == "__main__":
    main() 