import click
import sys
from pathlib import Path
from dotenv import load_dotenv
from loguru import logger

from .gemini_client import GeminiClient
from .video_executor import VideoExecutor

load_dotenv('.env')  # –ò—â–µ–º .env –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger.remove()
logger.add(sys.stderr, level="INFO", format="<green>{time:YYYY-MM-DD HH:mm:ss}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>")


@click.command()
@click.argument('request', required=True)
@click.option('--output-dir', '-o', default='output', help='–ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ')
@click.option('--api-key', help='API –∫–ª—é—á Gemini (–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è GEMINI_API_KEY)')
@click.option('--scene-name', default='VideoScene', help='–ò–º—è –∫–ª–∞—Å—Å–∞ —Å—Ü–µ–Ω—ã –≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∫–æ–¥–µ')
@click.option('--show-code', is_flag=True, help='–ü–æ–∫–∞–∑–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º')
def generate(request: str, output_dir: str, api_key: str, scene_name: str, show_code: bool):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å–ø–æ–ª—å–∑—É—è Gemini –∏ Manim.
    
    REQUEST - –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, –∫–∞–∫–æ–µ –≤–∏–¥–µ–æ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å
    
    –ü—Ä–∏–º–µ—Ä—ã:
    
        manim-generate "–°–æ–∑–¥–∞–π –∞–Ω–∏–º–∞—Ü–∏—é —Ç–µ–æ—Ä–µ–º—ã –ü–∏—Ñ–∞–≥–æ—Ä–∞"
        
        manim-generate "–ü–æ–∫–∞–∂–∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞–ª —Ñ—É–Ω–∫—Ü–∏–∏ x^2"
        
        manim-generate "–ê–Ω–∏–º–∞—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø—É–∑—ã—Ä—å–∫–æ–º"
    """
    
    logger.info("üé¨ –ó–∞–ø—É—Å–∫ Manim Video Generator")
    logger.info(f"üìù –ó–∞–ø—Ä–æ—Å: {request}")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Gemini
        logger.info("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Gemini...")
        gemini = GeminiClient(api_key=api_key)
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
        logger.info("‚ö° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ Manim...")
        code = gemini.generate_manim_code(request)
        
        if show_code:
            click.echo("üìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥:")
            click.echo("=" * 50)
            click.echo(code)
            click.echo("=" * 50)
            
            if not click.confirm("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ?"):
                logger.info("–û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
                return
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞
        logger.info("üé• –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∏–¥–µ–æ...")
        executor = VideoExecutor(output_dir=output_dir)
        video_path = executor.execute_manim_code(code, scene_name=scene_name)
        
        # –£—Å–ø–µ—Ö!
        logger.info(f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ: {video_path}")
        click.echo(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤: {video_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        size_mb = video_path.stat().st_size / (1024 * 1024)
        click.echo(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_mb:.1f} MB")
        
    except ValueError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        click.echo(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}", err=True)
        sys.exit(1)
        
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        click.echo(f"‚ùå –û—à–∏–±–∫–∞: {e}", err=True)
        sys.exit(1)


@click.group()
def cli():
    """Manim Video Generator - —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò"""
    pass


cli.add_command(generate)


if __name__ == '__main__':
    cli() 